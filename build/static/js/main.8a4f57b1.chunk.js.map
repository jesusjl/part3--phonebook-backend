{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notifications.js","components/ErrorNotification.js","services/Phones.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","props","onSubmit","valueName","onChangePerson","valuePhone","onChangePhone","type","Persons","person","onClick","name","number","Notification","message","className","ErrorNotification","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","App","useState","persons","setPersons","newName","setNewName","newPhone","setNewPhone","filterNames","setFilterNames","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","phoneService","initialPhones","startsWithLetters","filter","toUpperCase","startsWith","event","target","preventDefault","find","alert","window","confirm","changedPersonPhone","returnedPerson","map","setTimeout","catch","error","n","returnedPhone","concat","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a4f57b1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({value, onChange}) => {\n    return (\n        <div>\n        filter show with \n        <input value={value} onChange={onChange}/>\n        </div>\n    )\n}\n\nexport default Filter","import React from \"react\";\n\nconst PersonForm = (props) => {\n    return (\n        <div>\n            <form onSubmit={props.onSubmit}>\n                <div>\n                    name: <input value={props.valueName}  onChange={props.onChangePerson}/>\n                </div>\n                <div>\n                    number: <input value={props.valuePhone}  onChange={props.onChangePhone} />\n                </div>\n                <div>\n                    <button type='submit'>Add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonForm","import React from \"react\";\n\nconst Persons = ({person, onClick}) => {\n\n    return (\n    <div>\n        {person.name} {person.number} <button onClick={onClick}>delete</button>\n    </div>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({message}) => {\n\n    if(message === null) {\n        return null\n    }\n\n    return (\n        <div className='success'>{message}</div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst ErrorNotification = ({message}) => {\n\n    if(message === null) {\n        return null\n    }\n\n    return (\n        <div className='error'>{message}</div>\n    )\n}\n\nexport default ErrorNotification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => axios.get(baseUrl).then(response => response.data)\n\nconst create = (newObject) => axios.post(baseUrl, newObject).then(response => response.data)\n\nconst deletePerson = (id) => axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n\n    \nexport default {getAll, create, deletePerson, update}","import React, {useState, useEffect} from 'react'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notifications'\nimport ErrorNotification from './components/ErrorNotification'\nimport phoneService from './services/Phones'\n\nimport './index.css'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [filterNames, setFilterNames] = useState('')\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(()=> {\n    phoneService\n      .getAll()\n      .then(initialPhones=> {\n        setPersons(initialPhones)\n      })\n    }, [])\n\n  const addUpdatePerson = (event) => {\n\n    event.preventDefault()\n    \n    if (persons.find(person => person.name === newName &  person.number === newPhone)){\n      alert(`${newName} is already added to phonebook`)\n    } else if (persons.find(person => person.name === newName &  person.number !== newPhone)) {\n        const person = persons.find(person => person.name === newName &  person.number !== newPhone)\n        const response = window.confirm(`${person.name} is already added to the notebook, replace the old number with a new one?`)\n        if(response) {\n          const changedPersonPhone = { ...person, number: newPhone }\n\n          phoneService\n            .update(changedPersonPhone.id, changedPersonPhone.number)\n            .then(returnedPerson => {\n              setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n              setSuccessMessage(`Updated '${changedPersonPhone.name}' phone to '${changedPersonPhone.number}'`)\n              setTimeout(()=> {\n                setSuccessMessage(null)\n              }, 5000)\n            })\n            .catch(error => {\n              setErrorMessage( `Information of '${changedPersonPhone.name}' has already been removed from server`)\n              setTimeout(()=> {\n                setErrorMessage(null)\n              }, 5000)\n              setPersons(persons.filter(n => n.id !== changedPersonPhone.id))\n            })\n        }\n      } else {\n      const personObject = {\n        name : newName,\n        number: newPhone\n      }\n\n      phoneService\n        .create(personObject)\n        .then(returnedPhone => {\n          setPersons(persons.concat(returnedPhone))\n          setNewPhone('')\n          setNewName('')\n          setSuccessMessage(`Added '${returnedPhone.name}'`)\n          setTimeout(()=> {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleDeletePerson = (id) => {\n    const response = window.confirm(\"Are you sure?\")\n    if(response) {\n      phoneService\n        .deletePerson(id)\n        .then(deletedPerson => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    } \n  }\n\n  \n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleFilterByPersonChange = (event) => {\n    setFilterNames(event.target.value)\n  }\n\n\n\n  const startsWithLetters = filterNames === ''\n    ? persons\n    : persons.filter((person) => person.name.toUpperCase().startsWith(filterNames.toUpperCase()))\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n          <Notification message={successMessage} />\n          <ErrorNotification message={errorMessage} />\n          <Filter value = {filterNames} onChange={handleFilterByPersonChange} />\n          <PersonForm onSubmit = {addUpdatePerson} \n                      valueName={newName} \n                      onChangePerson={handlePersonChange}\n                      valuePhone={newPhone}\n                      onChangePhone={handlePhoneChange} />\n\n        <h2>Numbers</h2>\n      \n        {startsWithLetters.map((person) => \n          <Persons key={person.id} person={person} onClick={() => handleDeletePerson(person.id)}/>)}\n      </div>\n    )\n}\n\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}